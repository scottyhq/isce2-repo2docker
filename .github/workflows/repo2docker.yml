name: Repo2Docker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  CONTAINER_NAME: ${{ github.repository }} # user/repo format
  GITHUB_SHA: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v1
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
    - name: Authenticate with DockerHub
      # Consider GitHub Packages once they allow for unathenticated pulling
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build Image
      # Tag with short 7-character SHA
      run: |
        DOCKER_TAG=${GITHUB_SHA::8}
        if docker pull "${CONTAINER_NAME}:latest"; then
          jupyter-repo2docker --cache-from "${CONTAINER_NAME}:latest" --debug --user-name jovyan --user-id 1000 --no-run --image-name "${CONTAINER_NAME}:${DOCKER_TAG}" "${PWD}"
        else
          jupyter-repo2docker --debug --user-name jovyan --user-id 1000 --no-run --image-name "${CONTAINER_NAME}:${DOCKER_TAG}" "${PWD}"
        fi
    - name: Push Image to DockerHub
      # Only push if merge to master
      if: github.ref == 'refs/heads/master'
      run: |
        DOCKER_TAG=${GITHUB_SHA::8}
        docker image ls
        docker tag $CONTAINER_NAME:$DOCKER_TAG $CONTAINER_NAME:latest
        docker push $CONTAINER_NAME:$DOCKER_TAG
        docker push $CONTAINER_NAME:latest
